{"version":3,"sources":["contexts.js","Utils.js","components/Header.js","WebAPI.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/RegisterPage/RegisterPage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","NavbarList","LeftContainner","Banner","Link","Nav","props","$active","Header","location","useLocation","history","useHistory","useContext","user","setUser","to","pathname","onClick","push","BASE_URL","getMe","fetch","headers","authorization","then","res","json","HomeWrapper","PostContainer","PostTitle","PostData","Pagination","PageButton","$prev","Post","post","id","title","Date","createdAt","toLocaleString","HomePage","useState","posts","setPosts","page","setPage","useEffect","getPosts","map","length","LoginContainer","LoginInput","Button","button","Error","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","onSubmit","e","method","body","JSON","stringify","login","data","ok","message","response","toString","value","onChange","target","type","PostContent","PostPage","setPost","useParams","getPost","NewPostContainer","PostLable","PostInput","PostTitleInput","input","PostTextarea","textarea","PostSubmit","setTitle","setBody","newPost","console","log","placeholder","rows","RegisterContainer","RegisterInput","nickname","setNickname","register","Root","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eee510b4.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\nexport const getPages = (totalPages) => {\n  let pages = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pages.push(i);\n  }\n  return pages;\n};\n","import styled from \"styled-components\";\nimport React, { useContext } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts\";\nimport { setAuthToken } from \"../Utils\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  border-bottom: 1px solid rgb(0, 0, 0, 0.2);\n  padding: 0 32px;\n  align-items: center;\n  box-sizing: border-box;\n`;\nconst NavbarList = styled.div`\n  display: flex;\n`;\nconst LeftContainner = styled.div`\n  display: flex;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\nconst Banner = styled(Link)`\n  font-size: 28px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n`;\n\nconst Nav = styled(Link)`\n  height: 64px;\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.2);\n  `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogoout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainner>\n        <Banner to=\"/\">部落格</Banner>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainner>\n      <NavbarList>\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n            註冊\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogoout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import { getAuthToken } from \"./Utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = (page) => {\n  return fetch(`${BASE_URL}/posts?_page=${page}&_limit=5`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname: nickname,\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n","import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../../WebAPI\";\nimport { Link } from \"react-router-dom\";\n\nconst HomeWrapper = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  margin-top: 80px;\n`;\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 16px;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  cursor: pointer;\n  color: #333;\n  text-decoration: none;\n`;\nconst PostData = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst PageButton = styled.div`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 36px;\n  height: 36px;\n  border: solid 1px #3333332b;\n  color: #333;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  ${(props) =>\n    props.$prev &&\n    `\n      border-radius: 0px;\n      border: none;\n      transition: 0.5s;\n      cursor: pointer;\n      &:hover {\n        background-color: #fff;\n        color: #333;\n        border-bottom: 1px solid #333;\n      }\n    `}\n`;\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostData>{new Date(post.createdAt).toLocaleString()}</PostData>\n    </PostContainer>\n  );\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const handlePrevClick = () => {\n    setPage(page - 1);\n  };\n\n  const handleNextClick = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    getPosts(page).then((posts) => setPosts(posts));\n  }, [page]);\n\n  return (\n    <HomeWrapper>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <Pagination>\n        {page !== 1 && (\n          <PageButton $prev onClick={handlePrevClick}>\n            ＜\n          </PageButton>\n        )}\n        <PageButton>{page}</PageButton>\n        {posts.length === 5 && (\n          <PageButton $prev onClick={handleNextClick}>\n            ＞\n          </PageButton>\n        )}\n      </Pagination>\n    </HomeWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../Utils\";\nimport { AuthContext } from \"../../contexts\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginContainer = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  margin-top: 80px;\n  border: 1px solid #333;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst LoginInput = styled.div`\n  padding: 8px;\n`;\nconst Button = styled.button``;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <LoginContainer>\n      {errorMessage && <Error>{errorMessage}</Error>}\n      <form onSubmit={handleSubmit}>\n        <LoginInput>\n          username:\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </LoginInput>\n        <LoginInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </LoginInput>\n        <Button>登入</Button>\n      </form>\n    </LoginContainer>\n  );\n}\n","// import \"./App.css\";\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { getPost } from \"../../WebAPI\";\nimport { useParams } from \"react-router-dom\";\n\nconst HomeWrapper = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  margin-top: 80px;\n  border: 1px solid #333;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nconst PostContainer = styled.div`\n  padding: 16px;\n  position: relative;\n`;\nconst PostTitle = styled.div`\n  font-size: 24px;\n`;\nconst PostData = styled.div`\n  margin: 20px 0;\n  color: rgba(0, 0, 0, 0.5);\n`;\nconst PostContent = styled.div``;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostData>{new Date(post.createdAt).toLocaleString()}</PostData>\n      <PostContent>{post.body}</PostContent>\n    </PostContainer>\n  );\n}\n\nexport default function PostPage() {\n  const [post, setPost] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id).then((post) => setPost(post));\n  }, [id]);\n\n  return (\n    <HomeWrapper>\n      <Post post={post} />\n    </HomeWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { newPost } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../Utils\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst NewPostContainer = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  margin-top: 80px;\n  border: 1px solid #333;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  padding: 16px;\n`;\nconst PostLable = styled.div`\n  margin: 10px 0px;\n  font-size: 20px;\n`;\n\nconst PostInput = styled.div`\n  margin: 16px;\n`;\nconst PostTitleInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  font-size: 18px;\n`;\nconst PostTextarea = styled.textarea`\n  width: 100%;\n  padding: 8px;\n`;\nconst PostSubmit = styled.div`\n  margin-top: 16px;\n  text-align: center;\n`;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    const token = getAuthToken();\n    setErrorMessage(null);\n    if (token) {\n      if (!title || !body) {\n        return setErrorMessage(\"Please fill the empty area.\");\n      }\n      newPost(title, body).then((response) => {\n        console.log(response);\n      });\n      history.push(\"/\");\n    }\n  };\n  return (\n    <NewPostContainer>\n      {errorMessage && <Error>{errorMessage}</Error>}\n      <form onSubmit={handleSubmit}>\n        <PostInput>\n          <PostLable>文章標題</PostLable>\n          <PostTitleInput\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"標題\"\n          />\n        </PostInput>\n        <PostInput>\n          <PostLable>文章內容</PostLable>\n          <PostTextarea\n            rows={14}\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          />\n        </PostInput>\n        <PostSubmit>\n          <button>發布</button>\n        </PostSubmit>\n      </form>\n    </NewPostContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { getMe, register } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../Utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterContainer = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  margin-top: 80px;\n  border: 1px solid #333;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst RegisterInput = styled.div`\n  padding: 8px;\n`;\nconst Button = styled.button``;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    if (!username || !password || !nickname) {\n      return setErrorMessage(\"請填寫完整資料\");\n    }\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <RegisterContainer>\n      {errorMessage && <Error>{errorMessage}</Error>}\n      <form onSubmit={handleSubmit}>\n        <RegisterInput>\n          nickname:\n          <input\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          username:\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </RegisterInput>\n        <RegisterInput>\n          password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </RegisterInput>\n        <Button>註冊</Button>\n      </form>\n    </RegisterContainer>\n  );\n}\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Header\";\nimport HomePage from \"../pages/HomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport PostPage from \"../pages/PostPage\";\nimport NewPostPage from \"../pages/NewPostPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts\";\nimport { getMe } from \"../WebAPI\";\nimport { getAuthToken } from \"../Utils\";\n\nconst Root = styled.div``;\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const token = getAuthToken();\n  useEffect(() => {\n    if (token) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/Login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/New-post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/Register\">\n              <RegisterPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}